//==============================================================================
//
// The code is generated by Intel Compiler for SystemC, version 1.3.7
// see more information at https://github.com/intel/systemc-compiler
//
//==============================================================================

//==============================================================================
//
// Module: A_mod ()
//
module A_mod // "a_mod"
(
);

// SystemC signals
logic [3:0] s;

//------------------------------------------------------------------------------
// Method process: big_shift (test_const_binary.cpp:38:5) 

always_comb 
begin : big_shift     // test_const_binary.cpp:38:5
    logic [130:0] a;
    logic [141:0] b;
    logic [138:0] c;
    logic [19:0] d;
    a = 131'd1 <<< 130;
    b = (signed'({1'b0, a}) + 3) <<< 10;
    c = b - a + 1;
    d = c >>> 120;
end

//------------------------------------------------------------------------------
// Method process: concat_const (test_const_binary.cpp:55:5) 

always_comb 
begin : concat_const     // test_const_binary.cpp:55:5
    logic [3:0] a;
    logic [15:0] b;
    logic [71:0] d;
    a = {2'd1, 2'd2};
    a = {2'(1 + 1), 2'd2};
    a = {3'd1, 1'd2};
    a = {3'd1, 1'd2};
    b = {'h11, 'h11};
    b = {'h11, 4'h11};
    b = {4'h11, 'h11};
    b = {2'h11, 10'h11};
    d = {'h555, 'h11};
end

//------------------------------------------------------------------------------
// Method process: concat_const_var (test_const_binary.cpp:89:5) 

always_comb 
begin : concat_const_var     // test_const_binary.cpp:89:5
    logic [3:0] a;
    logic [7:0] b;
    logic [15:0] c;
    logic [15:0] d;
    logic [19:0] e;
    a = s;
    b = {2'd1, a};
    b = {a, 4'hFF};
    b = {a, 4'(254 + 1)};
    c = {b, 'h11};
    c = {'h11, a};
    d = 11'h11;
    d = 11'(a);
    d = {11'h11, 3'(a)};
    d = {3'h11, 5'(a)};
    e = 11'('h11 + a * 2);
    e = 11'(3'h11 + (2 >>> 2));
    e = 7'(7'(a) + 14'h11);
end

//------------------------------------------------------------------------------
// Method process: concat_const_cast (test_const_binary.cpp:110:5) 

always_comb 
begin : concat_const_cast     // test_const_binary.cpp:110:5
    logic [15:0] a;
    logic [6:0] b;
    a = {8'(4'h55), 8'(4'h11)};
    a = {{1'd1, 6'(4'('h11 + 1))}, 6'(4'h11)};
    b = 8'h555;
    b = 6'h555;
end

endmodule


