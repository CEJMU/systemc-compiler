//==============================================================================
//
// The code is generated by Intel Compiler for SystemC, version 1.3.7
// see more information at https://github.com/intel/systemc-compiler
//
//==============================================================================

//==============================================================================
//
// Module: B_top ()
//
module B_top // "b_mod"
(
);

// SystemC signals
logic a;
logic b;
logic c;


//------------------------------------------------------------------------------

A a_mod
(
  .a(a),
  .b(b),
  .c(c)
);

endmodule



//==============================================================================
//
// Module: A (test_while.cpp:187:5)
//
module A // "b_mod.a_mod"
(
    input logic a,
    output logic b,
    output logic c
);

// SystemC signals

//------------------------------------------------------------------------------
// Method process: while_stmt_empty (test_while.cpp:44:5) 

// Process-local variables
logic signed [31:0] k;

always_comb 
begin : while_stmt_empty     // test_while.cpp:44:5
    integer i;
    i = 0;
    while (i < 2)
    begin
        k = i;
        i++;
    end
end

//------------------------------------------------------------------------------
// Method process: while_stmt1 (test_while.cpp:54:5) 

// Process-local variables
logic signed [31:0] k;

always_comb 
begin : while_stmt1     // test_while.cpp:54:5
    integer i;
    k = 0;
    i = 0;
    while (i < 2)
    begin
        k = k + 1;
        i++;
    end
end

//------------------------------------------------------------------------------
// Method process: while_stmt2 (test_while.cpp:65:5) 

// Process-local variables
logic signed [31:0] m;

always_comb 
begin : while_stmt2     // test_while.cpp:65:5
    integer j;
    integer i;
    j = 1;
    i = 0;
    while (i < 3)
    begin
        i++;
        if (m > 0)
        begin
            j = 2;
        end else begin
            j = 3;
        end
    end
    j = 4;
end

//------------------------------------------------------------------------------
// Method process: while_stmt3 (test_while.cpp:82:5) 

// Process-local variables
logic signed [31:0] k;
logic signed [31:0] m;

always_comb 
begin : while_stmt3     // test_while.cpp:82:5
    integer i;
    integer j;
    i = 0;
    j = 1;
    k = 0;
    if (m > 0)
    begin
        j = 2;
    end else begin
        j = 3;
    end
    while (i < 2)
    begin
        k++;
        i++;
    end
    j = 4;
end

//------------------------------------------------------------------------------
// Method process: while_stmt4 (test_while.cpp:98:5) 

// Process-local variables
logic signed [31:0] k;
logic signed [31:0] m;

always_comb 
begin : while_stmt4     // test_while.cpp:98:5
    integer i;
    integer j;
    i = 0;
    j = 1;
    k = 0;
    if (m > 0)
    begin
        j = 2;
    end
    while (i < 2)
    begin
        k++;
        i++;
    end
    j = 3;
end

//------------------------------------------------------------------------------
// Method process: while_stmt5 (test_while.cpp:113:5) 

// Process-local variables
logic signed [31:0] k;

always_comb 
begin : while_stmt5     // test_while.cpp:113:5
    integer i;
    integer j;
    k = 0;
    i = 0;
    while (i < 2)
    begin
        j = 0;
        i++;
        while (j < 3)
        begin
            k = k + 1;
            j++;
        end
    end
end

//------------------------------------------------------------------------------
// Method process: while_stmt6 (test_while.cpp:128:5) 

// Process-local variables
logic signed [31:0] k;
logic signed [31:0] m;

always_comb 
begin : while_stmt6     // test_while.cpp:128:5
    integer i;
    k = 0;
    i = 0;
    if (m > 0)
    begin
        while (i < 2)
        begin
            k = k + 1;
            i++;
        end
    end else begin
        k = 3;
    end
end

//------------------------------------------------------------------------------
// Method process: while_stmt7 (test_while.cpp:142:5) 

// Process-local variables
logic signed [31:0] k;
logic signed [31:0] n;
logic signed [31:0] m;

always_comb 
begin : while_stmt7     // test_while.cpp:142:5
    integer i;
    k = 0;
    n = 0;
    i = 0;
    while (i < 3)
    begin
        k = k + i;
        i++;
        n = m++;
    end
end

//------------------------------------------------------------------------------
// Method process: while_const (test_while.cpp:153:5) 

// Process-local variables
logic signed [31:0] k;

always_comb 
begin : while_const     // test_while.cpp:153:5
    k = 0;
    b = |(k + 1);
    k = 1;
    b = |(k + 2);
end

//------------------------------------------------------------------------------
// Method process: while_sc_type (test_while.cpp:167:5) 

// Process-local variables
logic signed [31:0] k;

always_comb 
begin : while_sc_type     // test_while.cpp:167:5
    logic [2:0] i;
    k = 0;
    i = 0;
    while (i < 2)
    begin
        k = k + 1;
        i++;
    end
end

endmodule


