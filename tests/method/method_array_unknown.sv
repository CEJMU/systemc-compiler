//==============================================================================
//
// The code is generated by Intel Compiler for SystemC, version 1.3.7
// see more information at https://github.com/intel/systemc-compiler
//
//==============================================================================

//==============================================================================
//
// Module: B_top ()
//
module B_top // "b_mod"
(
);


//------------------------------------------------------------------------------

A a_mod
(

);

endmodule



//==============================================================================
//
// Module: A (test_array_unknown.cpp:219:5)
//
module A // "b_mod.a_mod"
(
);

// SystemC signals
logic ch[2][2];
logic signed [31:0] a;

//------------------------------------------------------------------------------
// Method process: array_init (test_array_unknown.cpp:60:5) 

// Process-local variables
logic signed [31:0] n[2][2];

always_comb 
begin : array_init     // test_array_unknown.cpp:60:5
    for (integer i = 0; i < 2; i++)
    begin
        for (integer j = 0; j < 2; j++)
        begin
            n[i][j] = i + j + 1;
        end
    end
end

//------------------------------------------------------------------------------
// Method process: multi_array_of_channel_pointers (test_array_unknown.cpp:72:5) 

always_comb 
begin : multi_array_of_channel_pointers     // test_array_unknown.cpp:72:5
    logic b;
    b = ch[1][0];
end

//------------------------------------------------------------------------------
// Method process: write_unknown_index1 (test_array_unknown.cpp:77:5) 

// Process-local variables
logic signed [31:0] m[3];

always_comb 
begin : write_unknown_index1     // test_array_unknown.cpp:77:5
    m[0] = 1;
    m[1] = 2;
    m[2] = 3;
    m[a] = 1;
end

//------------------------------------------------------------------------------
// Method process: write_unknown_index2 (test_array_unknown.cpp:88:5) 

always_comb 
begin : write_unknown_index2     // test_array_unknown.cpp:88:5
    integer n_1[2][2];
    n_1[0][0] = 0;
    n_1[0][1] = 1;
    n_1[1][0] = 2;
    n_1[1][1] = 3;
    n_1[a][1] = 4;
end

//------------------------------------------------------------------------------
// Method process: write_unknown_index3 (test_array_unknown.cpp:101:5) 

always_comb 
begin : write_unknown_index3     // test_array_unknown.cpp:101:5
    integer n_1[2][2];
    n_1[0][0] = 0;
    n_1[0][1] = 1;
    n_1[1][0] = 2;
    n_1[1][1] = 3;
    n_1[1][a] = 2;
end

//------------------------------------------------------------------------------
// Method process: write_unknown_index_sc_type (test_array_unknown.cpp:114:5) 

always_comb 
begin : write_unknown_index_sc_type     // test_array_unknown.cpp:114:5
    logic signed [2:0] k[3];
    k[0] = 0; k[1] = 0; k[2] = 0;
    k[a] = 1;
end

//------------------------------------------------------------------------------
// Method process: pointer_unknown_index1 (test_array_unknown.cpp:125:5) 

// Process-local variables
logic signed [31:0] mm[3];

always_comb 
begin : pointer_unknown_index1     // test_array_unknown.cpp:125:5
    mm[0] = 1;
    mm[1] = 2;
    mm[2] = 3;
    mm[a] = 1;
end

//------------------------------------------------------------------------------
// Method process: pointer_unknown_index_sc_type (test_array_unknown.cpp:136:5) 

// Process-local variables
logic [2:0] kk[3];

always_comb 
begin : pointer_unknown_index_sc_type     // test_array_unknown.cpp:136:5
    kk[0] = 1;
    kk[1] = 2;
    kk[2] = 3;
    kk[a] = 1;
end

//------------------------------------------------------------------------------
// Method process: unary_array_unknown1 (test_array_unknown.cpp:147:5) 

// Process-local variables
logic signed [31:0] m[3];

always_comb 
begin : unary_array_unknown1     // test_array_unknown.cpp:147:5
    m[0] = 1;
    m[1] = 2;
    m[2] = 3;
    m[a]++;
end

//------------------------------------------------------------------------------
// Method process: unary_array_unknown2 (test_array_unknown.cpp:158:5) 

// Process-local variables
logic signed [31:0] m[3];

always_comb 
begin : unary_array_unknown2     // test_array_unknown.cpp:158:5
    m[0] = 1;
    m[1] = 2;
    m[2] = 3;
    --m[a];
end

//------------------------------------------------------------------------------
// Method process: unary_array_unknown_sc_type (test_array_unknown.cpp:169:5) 

always_comb 
begin : unary_array_unknown_sc_type     // test_array_unknown.cpp:169:5
    logic [2:0] k[3];
    k[0] = 0; k[1] = 0; k[2] = 0;
    k[0] = 1;
    k[1] = 2;
    k[2] = 3;
    k[a]++;
end

//------------------------------------------------------------------------------
// Method process: comp_assign_array_unknown1 (test_array_unknown.cpp:181:5) 

// Process-local variables
logic signed [31:0] m[3];

always_comb 
begin : comp_assign_array_unknown1     // test_array_unknown.cpp:181:5
    m[0] = 1;
    m[1] = 2;
    m[2] = 3;
    m[a] = m[a] + 1;
end

//------------------------------------------------------------------------------
// Method process: comp_assign_array_unknown2 (test_array_unknown.cpp:192:5) 

// Process-local variables
logic signed [31:0] n[2][2];

always_comb 
begin : comp_assign_array_unknown2     // test_array_unknown.cpp:192:5
    n[0][0] = 0;
    n[0][1] = 1;
    n[1][0] = 2;
    n[1][1] = 3;
    n[a][1] = n[a][1] - 4;
end

//------------------------------------------------------------------------------
// Method process: comp_assign_array_unknown3 (test_array_unknown.cpp:204:6) 

// Process-local variables
logic signed [31:0] n[2][2];

always_comb 
begin : comp_assign_array_unknown3     // test_array_unknown.cpp:204:6
    n[0][0] = 0;
    n[0][1] = 1;
    n[1][0] = 2;
    n[1][1] = 3;
    n[1][a] = n[1][a] - 2;
end

endmodule


