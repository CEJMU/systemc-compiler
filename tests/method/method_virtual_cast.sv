//==============================================================================
//
// The code is generated by Intel Compiler for SystemC, version 1.3.7
// see more information at https://github.com/intel/systemc-compiler
//
//==============================================================================

//==============================================================================
//
// Module: B_top ()
//
module B_top // "b_mod"
(
);


//------------------------------------------------------------------------------

C c_mod
(

);

D d_mod
(

);

endmodule



//==============================================================================
//
// Module: C (test_virtual_cast.cpp:69:5)
//
module C // "b_mod.c_mod"
(
);

// SystemC signals

//------------------------------------------------------------------------------
// Method process: proc_func (test_virtual_cast.cpp:35:5) 

// Process-local variables
logic signed [15:0] m0;
logic signed [7:0] m;

always_comb 
begin : proc_func     // test_virtual_cast.cpp:35:5
    // Call f() begin
    m0 = m0 + 2;
    // Call f() end
    // Call f() begin
    m0 = m0 + 2;
    // Call f() end
    // Call f() begin
    m = m + 1;
    // Call f() end
end

endmodule



//==============================================================================
//
// Module: D (test_virtual_cast.cpp:70:5)
//
module D // "b_mod.d_mod"
(
);

// SystemC signals

//------------------------------------------------------------------------------
// Method process: proc_func (test_virtual_cast.cpp:35:5) 

// Process-local variables
logic signed [15:0] m0;
logic signed [7:0] m;

always_comb 
begin : proc_func     // test_virtual_cast.cpp:35:5
    // Call f() begin
    m0 = m0 + 2;
    // Call f() end
    // Call f() begin
    m0 = m0 + 2;
    // Call f() end
    // Call f() begin
    m = m + 1;
    // Call f() end
end

//------------------------------------------------------------------------------
// Method process: proc_func0 (test_virtual_cast.cpp:57:5) 

// Process-local variables
logic signed [31:0] m1;
logic signed [15:0] m0;
logic signed [7:0] m;

always_comb 
begin : proc_func0     // test_virtual_cast.cpp:57:5
    // Call f() begin
    m1 = m1 + 3;
    // Call f() end
    // Call f() begin
    m1 = m1 + 3;
    // Call f() end
    // Call f() begin
    m0 = m0 + 2;
    // Call f() end
    // Call f() begin
    m = m + 1;
    // Call f() end
end

endmodule


