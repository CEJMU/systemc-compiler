//==============================================================================
//
// The code is generated by Intel Compiler for SystemC, version 1.3.7
// see more information at https://github.com/intel/systemc-compiler
//
//==============================================================================

//==============================================================================
//
// Module: B_top ()
//
module B_top // "b_mod"
(
);

// SystemC signals
logic a;
logic b;
logic c;


//------------------------------------------------------------------------------

A a_mod
(
  .a(a),
  .b(b),
  .c(c)
);

endmodule



//==============================================================================
//
// Module: A (test_for.cpp:231:5)
//
module A // "b_mod.a_mod"
(
    input logic a,
    output logic b,
    output logic c
);

// SystemC signals

//------------------------------------------------------------------------------
// Method process: requestProc (test_for.cpp:54:5) 

always_comb 
begin : requestProc     // test_for.cpp:54:5
    logic reqReady;
    reqReady = 1;
    for (integer port = 0; port < 1; port++)
    begin
        reqReady = reqReady && a;
    end
    for (integer port = 0; port < 1; port++)
    begin
        reqReady = reqReady || a;
    end
end

//------------------------------------------------------------------------------
// Method process: for_stmt_empty (test_for.cpp:67:5) 

always_comb 
begin : for_stmt_empty     // test_for.cpp:67:5
end

//------------------------------------------------------------------------------
// Method process: for_stmt1 (test_for.cpp:72:5) 

always_comb 
begin : for_stmt1     // test_for.cpp:72:5
    integer j;
    integer l;
    j = a;
    for (integer i = 0; i < 2; i++)
    begin
        l = a;
        b = |l;
    end
    b = |j;
end

//------------------------------------------------------------------------------
// Method process: for_stmt2 (test_for.cpp:82:5) 

always_comb 
begin : for_stmt2     // test_for.cpp:82:5
    integer j;
    integer l;
    integer l_1;
    j = a;
    for (integer i = 0; i < 2; i++)
    begin
        j = j + 1;
        l = 2 * j;
        if (a)
        begin
            l_1 = 3 * j;
            b = |l_1;
        end
        b = |l;
    end
    b = |j;
end

//------------------------------------------------------------------------------
// Method process: for_stmt3 (test_for.cpp:99:5) 

always_comb 
begin : for_stmt3     // test_for.cpp:99:5
    integer j;
    j = 1;
    for (integer i = 0; i < 3; i++)
    begin
        if (i > 1)
        begin
            j = 2;
        end else begin
            j = 3;
        end
        b = |j;
    end
    j = 4;
end

//------------------------------------------------------------------------------
// Method process: for_stmt4 (test_for.cpp:114:5) 

// Process-local variables
logic signed [31:0] k;
logic signed [31:0] m;

always_comb 
begin : for_stmt4     // test_for.cpp:114:5
    integer i;
    integer j;
    i = 0;
    j = 1;
    k = 0;
    if (m > 0)
    begin
        j = 2;
    end else begin
        j = 3;
    end
    for (; i < 2; i++)
    begin
        k++;
    end
    b = |(k + j);
end

//------------------------------------------------------------------------------
// Method process: for_stmt5 (test_for.cpp:131:5) 

// Process-local variables
logic signed [31:0] k;
logic signed [31:0] m;

always_comb 
begin : for_stmt5     // test_for.cpp:131:5
    integer i;
    integer j;
    i = 0;
    j = 1;
    k = 0;
    if (m > 0)
    begin
        j = 2;
    end
    for (; i < 2; i++)
    begin
        k++;
    end
    j = 3;
end

//------------------------------------------------------------------------------
// Method process: for_stmt6 (test_for.cpp:145:5) 

// Process-local variables
logic signed [31:0] k;

always_comb 
begin : for_stmt6     // test_for.cpp:145:5
    k = 0;
    for (integer i = 0; i < 2; i++)
    begin
        for (integer j = 0; j < 3; j++)
        begin
            k = k + 1;
        end
    end
    b = |k;
end

//------------------------------------------------------------------------------
// Method process: for_stmt7 (test_for.cpp:158:5) 

// Process-local variables
logic signed [31:0] k;

always_comb 
begin : for_stmt7     // test_for.cpp:158:5
    integer i;
    i = 1;
    k = 0;
    for (integer i = 0; i < 2; i++)
    begin
        for (integer j = 0; j < 3; j++)
        begin
            k = k + i;
        end
    end
    b = |(k + i);
end

//------------------------------------------------------------------------------
// Method process: sc_type_for (test_for.cpp:180:5) 

always_comb 
begin : sc_type_for     // test_for.cpp:180:5
    integer a_1[8];
    for (logic [3:0] i = 0; i < 8; i++)
    begin
        a_1[i] = i;
    end
end

endmodule


