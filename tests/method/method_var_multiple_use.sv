//==============================================================================
//
// The code is generated by Intel Compiler for SystemC, version 1.3.7
// see more information at https://github.com/intel/systemc-compiler
//
//==============================================================================

//==============================================================================
//
// Module: Top ()
//
module Top // "top"
(
    input logic clk
);

// SystemC signals
logic rst;
logic signed [31:0] t;


//------------------------------------------------------------------------------

Child child
(
  .clk(clk),
  .rst(rst),
  .in(t),
  .out(t)
);

endmodule



//==============================================================================
//
// Module: Child (test_var_multiple_use.cpp:54:5)
//
module Child // "top.child"
(
    input logic clk,
    input logic rst,
    input logic signed [31:0] in,
    output logic signed [31:0] out
);

// SystemC signals
logic signed [31:0] s;

//------------------------------------------------------------------------------
// Method process: methA (test_var_multiple_use.cpp:31:5) 

// Process-local variables
logic [2:0] v;

always_comb 
begin : methA     // test_var_multiple_use.cpp:31:5
    if (|in)
    begin
        v = 5;
    end
    s = 2 - v;
end

//------------------------------------------------------------------------------
// Method process: methB (test_var_multiple_use.cpp:37:5) 

// Process-local variables
logic [2:0] v;

always_comb 
begin : methB     // test_var_multiple_use.cpp:37:5
    out = in + signed'({1'b0, v});
end

//------------------------------------------------------------------------------
// Method process: methC (test_var_multiple_use.cpp:41:5) 

always_comb 
begin : methC     // test_var_multiple_use.cpp:41:5
    if (|in)
    begin
        out = 0;
    end else begin
        out = 1;
    end
end

endmodule


