//==============================================================================
//
// The code is generated by Intel Compiler for SystemC, version 1.3.24
// see more information at https://github.com/intel/systemc-compiler
//
//==============================================================================

//==============================================================================
//
// Module: A ()
//
module A // "a_mod"
(
    input logic clk
);

// Variables generated for SystemC signals
logic nrst;

//------------------------------------------------------------------------------
// Clocked THREAD: readProc (test_reset_noninit_read.cpp:38:5) 

// Next-state combinational logic
always_comb begin : readProc_comb     // test_reset_noninit_read.cpp:38:5
    readProc_func;
end
function void readProc_func;
endfunction

// Syncrhonous register update
always_ff @(posedge clk or negedge nrst) 
begin : readProc_ff
    if ( ~nrst ) begin
        integer aa[3];
        integer bb[3];
        integer cc[3][3];
        integer ii;
        integer i;
        integer ii_1;
        integer i_1;
        integer ii_2;
        bb[0] = 0; bb[1] = 1; bb[2] = 2;
        // Call f1() begin
        ii = aa[1];
        // Call f1() end
        i = 1;
        // Call f2() begin
        ii_1 = bb[i];
        // Call f2() end
        i_1 = 0;
        // Call f3() begin
        ii_2 = cc[i_1 + 1][i_1 + 2];
        // Call f3() end
    end
    else begin
    end
end

endmodule


